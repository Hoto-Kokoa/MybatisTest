<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.dao.IStudentDao">
    <sql id="testIf">
        <if test="id != null">
            and id = #{id}
        </if>
        <if test="name != null">
            and name = #{name}
        </if>
    </sql>
    
    <select id="findAllStudent" resultType="com.test.domain.Student">
        select id,name,sex,address from student
    </select>
    <select id="findOrderByName" resultType="com.test.domain.Student" >
        select * from student where name in (${value});
    </select>
    <select id="findOrderByName1" resultType="com.test.domain.Student" >
        select * from student where name in (#{name1},#{name2});
    </select>
    <update id="updateByName" parameterType="com.test.domain.Student" >
        UPDATE student set address = #{address} where name in #{name1};
    </update>
    <select id="countName" parameterType="com.test.domain.Student" resultType="Integer">
        SELECT count(*) from student where name = #{name};
    </select>
    <delete id="deleteById" parameterType="int" >
        DELETE FROM student WHERE id = #{id};
    </delete>
    <select id="RangeSelectById" parameterType="Integer" resultType="com.test.domain.Student">
        SELECT * FROM student WHERE id > #{id};
    </select>
    <select id="SelectLike" resultType="com.test.domain.Student" parameterType="String">
        SELECT * FROM student WHERE name like concat('%',#{name},'%');
    </select>
    <select id="testSqlIf" resultType="com.test.domain.Student" parameterType="com.test.domain.Student">
        select * from student
        where 1=1
        <include refid="testIf"></include>
    </select>
    <select id="list" resultType="com.test.domain.Student"  parameterType="com.test.domain.Student">
        SELECT * FROM student
        where 1=1
            <foreach collection="list" open="and id in( " close=")" separator=", " item="item">
                #{item}
            </foreach>
    </select>
</mapper>
